{
  "node_types": {
    "Ericsson.SAMPLE-VNF.1_25_CXS101289_R81E08.cxp9025898_4r81e08": {
      "derived_from": "tosca.nodes.nfv.VNF",
      "interfaces": {
        "EricssonChangeCurrentVnfPackage": {
          "type": "ericsson.interfaces.nfv.EricssonChangeCurrentVnfPackage"
        },
        "Vnflcm": {
          "type": "tosca.interfaces.nfv.Vnflcm",
          "operations": {
            "scale": {},
            "change_package": {
              "inputs": {
                "additional_parameters": {
                  "type": "ericsson.datatypes.nfv.ChangePackageVnfOperationAdditionalParameters",
                  "required": false
                },
                "helm_packages": {
                  "description": "list of all helm charts",
                  "type": "list",
                  "entry_schema": {
                    "type": "map"
                  },
                  "required": true
                }
              }
            },
            "terminate": {},
            "instantiate": {
              "inputs": {
                "additional_parameters": {
                  "type": "ericsson.datatypes.nfv.InstantiateVnfOperationAdditionalParameters",
                  "required": false
                },
                "helm_packages": {
                  "description": "list of all helm charts",
                  "type": "list",
                  "entry_schema": {
                    "type": "map"
                  },
                  "required": true
                }
              }
            }
          }
        }
      },
      "properties": {
        "descriptor_id": {
          "type": "string",
          "constraints": [
            {
              "valid_values": [
                "multi-chart-etsi-rel4-b-455379754e37"
              ]
            }
          ],
          "default": "multi-chart-etsi-rel4-b-455379754e37"
        },
        "provider": {
          "type": "string",
          "constraints": [
            {
              "valid_values": [
                "Ericsson"
              ]
            }
          ],
          "default": "Ericsson"
        },
        "descriptor_version": {
          "type": "string",
          "constraints": [
            {
              "valid_values": [
                "1.0.26.2"
              ]
            }
          ],
          "default": "1.0.26.2"
        },
        "vnfm_info": {
          "type": "list",
          "entry_schema": {
            "type": "string",
            "constraints": [
              {
                "valid_values": [
                  "3881:E-VNFM"
                ]
              }
            ]
          },
          "default": [
            "3881:E-VNFM"
          ]
        },
        "flavour_id": {
          "type": "string",
          "constraints": [
            {
              "valid_values": [
                "default"
              ]
            }
          ],
          "default": "default"
        },
        "software_version": {
          "type": "string",
          "constraints": [
            {
              "valid_values": [
                "1.0.26.2s"
              ]
            }
          ],
          "default": "1.0.26.2s"
        },
        "flavour_description": {
          "type": "string",
          "default": ""
        },
        "product_name": {
          "type": "string",
          "constraints": [
            {
              "valid_values": [
                "spider-app-multi-b-etsi-tosca-rel4"
              ]
            }
          ],
          "default": "spider-app-multi-b-etsi-tosca-rel4"
        }
      },
      "artifacts": {
        "crd_package1": {
          "type": "tosca.artifacts.File",
          "description": "sip-tls-crd-chart package",
          "file": "Definitions/OtherTemplates/eric-sec-sip-tls-crd-5.2.1.tgz"
        },
        "crd_package3": {
          "type": "tosca.artifacts.File",
          "description": "upgrade crd package",
          "file": "Definitions/OtherTemplates/scale-crd-1.0.2.tgz"
        },
        "crd_package2": {
          "type": "tosca.artifacts.File",
          "description": "cert-m crd package",
          "file": "Definitions/OtherTemplates/eric-sec-certm-crd-5.2.1.tgz"
        },
        "helm_package2": {
          "type": "tosca.artifacts.File",
          "description": "helm package associated with spider-app",
          "file": "Definitions/OtherTemplates/spider-app-2.219.5.tgz"
        },
        "helm_package1": {
          "type": "tosca.artifacts.File",
          "description": "test scale package",
          "file": "Definitions/OtherTemplates/test-scale-chart-0.3.5.tgz"
        },
        "scaling_mapping": {
          "type": "tosca.artifacts.File",
          "description": "Scaling Mapping file associated with this descriptor",
          "file": "Definitions/OtherTemplates/scaling_mapping.yaml"
        },
        "software_images": {
          "description": "Location of the software images being used in this package",
          "file": "Files/images/docker.tar",
          "type": "tosca.artifacts.nfv.SwImage",
          "properties": {
            "size": "99 B",
            "min_disk": "100 B",
            "name": "Docker",
            "checksum": {
              "hash": "C2259250EAE4E9D4CDCA5BC2829D40BB2D48A89870E37D21D9364F41BB0A85081757CAAD988D5C7D6D2DC62AFE30A505DFE7827FAA52BDA2CCF5E34C3CDD8301",
              "algorithm": "sha-512"
            },
            "disk_format": "raw",
            "version": "1.0.0",
            "container_format": "docker"
          }
        }
      }
    }
  },
  "topology_template": {
    "policies": [
      {
        "InstantiationLevels": {
          "type": "tosca.policies.nfv.InstantiationLevels",
          "properties": {
            "default_level": "instantiation_level_2",
            "levels": {
              "instantiation_level_3": {
                "description": "test-cnf, test-cnf-vnfc1, test-cnf-vnfc4",
                "scale_info": {
                  "Aspect4": {
                    "scale_level": 0
                  }
                }
              },
              "instantiation_level_2": {
                "description": "test-cnf-vnfc3, test-cnf-vnfc2",
                "scale_info": {
                  "Aspect2": {
                    "scale_level": 1
                  }
                }
              },
              "instantiation_level_1": {
                "description": "eric-pm-bulk-reporter",
                "scale_info": {
                  "Aspect1": {
                    "scale_level": 0
                  }
                }
              }
            }
          }
        }
      },
      {
        "vdu_1_instantiation_levels": {
          "type": "tosca.policies.nfv.VduInstantiationLevels",
          "targets": [
            "eric-pm-bulk-reporter"
          ],
          "properties": {
            "levels": {
              "instantiation_level_1": {
                "number_of_instances": 1
              }
            }
          }
        }
      },
      {
        "ScalingAspects1": {
          "type": "tosca.policies.nfv.ScalingAspects",
          "properties": {
            "aspects": {
              "Aspect4": {
                "name": "Aspect4",
                "description": "Scale level 0-6 maps to 2-8 for test-cnf, test-cnf-vnfc1, test-cnf-vnfc4 VNFC instances (1 instance per scale step)",
                "step_deltas": [
                  "delta_1"
                ],
                "max_scale_level": 6
              },
              "Aspect1": {
                "name": "Aspect1",
                "description": "Scale level 0-10 maps to 1-11 for eric-pm-bulk-reporter instances.",
                "step_deltas": [
                  "delta_1"
                ],
                "max_scale_level": 10
              },
              "Aspect2": {
                "name": "Aspect2",
                "description": "Scale level 0-10 maps to 5-45 for test-cnf-vnfc2 and test-cnf-vnfc3 VNFC instances (4 instance per scale step)",
                "step_deltas": [
                  "delta_1"
                ],
                "max_scale_level": 10
              }
            }
          }
        }
      },
      {
        "vnfc1.test-cnf": {
          "type": "tosca.policies.nfv.VduInitialDelta",
          "targets": [
            "test-cnf"
          ],
          "properties": {
            "initial_delta": {
              "number_of_instances": 1
            }
          }
        }
      },
      {
        "vnfc1": {
          "type": "tosca.policies.nfv.VduInitialDelta",
          "targets": [
            "test-cnf-vnfc1"
          ],
          "properties": {
            "initial_delta": {
              "number_of_instances": 1
            }
          }
        }
      },
      {
        "vnfc2": {
          "type": "tosca.policies.nfv.VduInitialDelta",
          "targets": [
            "test-cnf-vnfc2"
          ],
          "properties": {
            "initial_delta": {
              "number_of_instances": 1
            }
          }
        }
      },
      {
        "vnfc3": {
          "type": "tosca.policies.nfv.VduInitialDelta",
          "targets": [
            "test-cnf-vnfc3"
          ],
          "properties": {
            "initial_delta": {
              "number_of_instances": 1
            }
          }
        }
      },
      {
        "vnfc4": {
          "type": "tosca.policies.nfv.VduInitialDelta",
          "targets": [
            "test-cnf-vnfc4"
          ],
          "properties": {
            "initial_delta": {
              "number_of_instances": 1
            }
          }
        }
      },
      {
        "eric-pm-bulk-reporter": {
          "type": "tosca.policies.nfv.VduInitialDelta",
          "targets": [
            "eric-pm-bulk-reporter"
          ],
          "properties": {
            "initial_delta": {
              "number_of_instances": 1
            }
          }
        }
      },
      {
        "Payload_ScalingAspectDeltas1": {
          "type": "tosca.policies.nfv.VduScalingAspectDeltas",
          "targets": [
            "eric-pm-bulk-reporter"
          ],
          "properties": {
            "deltas": {
              "delta_1": {
                "number_of_instances": 1
              }
            },
            "aspect": "Aspect1"
          }
        }
      },
      {
        "Payload_ScalingAspectDeltas2": {
          "type": "tosca.policies.nfv.VduScalingAspectDeltas",
          "targets": [
            "test-cnf-vnfc3",
            "test-cnf-vnfc2"
          ],
          "properties": {
            "deltas": {
              "delta_1": {
                "number_of_instances": 4
              }
            },
            "aspect": "Aspect2"
          }
        }
      },
      {
        "Payload_ScalingAspectDeltas4": {
          "type": "tosca.policies.nfv.VduScalingAspectDeltas",
          "targets": [
            "test-cnf",
            "test-cnf-vnfc1",
            "test-cnf-vnfc4"
          ],
          "properties": {
            "deltas": {
              "delta_1": {
                "number_of_instances": 1
              }
            },
            "aspect": "Aspect4"
          }
        }
      },
      {
        "rollback-operation-from-multi-b-to-multi-a": {
          "type": "tosca.policies.nfv.VnfPackageChange",
          "triggers": {
            "rollback-operation-from-multi-b-to-multi-a": {
              "event": "tosca.interfaces.nfv.EricssonChangeCurrentVnfPackage",
              "action": [
                {
                  "call_operation": "EricssonChangeCurrentVnfPackage.rollback-operation-from-multi-b-to-multi-a"
                }
              ]
            }
          },
          "properties": {
            "additional_modification_description": "..",
            "selector": [
              {
                "source_descriptor_id": "multi-chart-etsi-rel4-b-455379754e37",
                "destination_descriptor_id": "multi-chart-etsi-rel4-5fcb086597",
                "source_flavour_id": "default"
              }
            ],
            "modification_qualifier": "down",
            "destination_flavour_id": "default"
          }
        }
      },
      {
        "rollback-operation-from-rel4-b-to-legacy-a": {
          "type": "tosca.policies.nfv.VnfPackageChange",
          "triggers": {
            "rollback-operation-from-rel4-b-to-legacy-a": {
              "event": "tosca.interfaces.nfv.EricssonChangeCurrentVnfPackage",
              "action": [
                {
                  "call_operation": "EricssonChangeCurrentVnfPackage.rollback-operation-from-rel4-b-to-legacy-a"
                }
              ]
            }
          },
          "properties": {
            "additional_modification_description": "..",
            "selector": [
              {
                "source_descriptor_id": "multi-chart-etsi-rel4-b-455379754e37",
                "destination_descriptor_id": "multi-chart-477c-aab3-2b04e6a383",
                "source_flavour_id": "default"
              }
            ],
            "modification_qualifier": "down",
            "destination_flavour_id": "default"
          }
        }
      }
    ],
    "inputs": {
      "modifiable_attributes": {
        "type": "ericsson.datatypes.nfv.VnfInfoModifiableAttributes"
      }
    },
    "node_templates": {
      "vnfc1_container": {
        "type": "tosca.nodes.nfv.Vdu.OsContainer",
        "properties": {
          "name": "vnfc1 Container",
          "requested_cpu_resources": 1000,
          "description": "vnfc1 Container",
          "requested_memory_resources": "1 GiB",
          "memory_resource_limit": "10 GiB",
          "cpu_resource_limit": 2500
        },
        "artifacts": {
          "sw_image": {
            "type": "tosca.artifacts.nfv.SwImage",
            "properties": {
              "size": "99 B",
              "min_disk": "100 B",
              "name": "Docker",
              "checksum": {
                "hash": "C2259250EAE4E9D4CDCA5BC2829D40BB2D48A89870E37D21D9364F41BB0A85081757CAAD988D5C7D6D2DC62AFE30A505DFE7827FAA52BDA2CCF5E34C3CDD8302",
                "algorithm": "sha-512"
              },
              "disk_format": "raw",
              "version": "1.0.0",
              "container_format": "docker"
            },
            "file": "Files/images/docker.tar"
          }
        }
      },
      "SAMPLE-VNF": {
        "type": "Ericsson.SAMPLE-VNF.1_25_CXS101289_R81E08.cxp9025898_4r81e08",
        "properties": {},
        "interfaces": {
          "EricssonChangeCurrentVnfPackage": {
            "inputs": {
              "rollback_at_failure_pattern": [
                {
                  "helm_package1": "helm_package1: upgrade, helm_package1: rollback"
                },
                {
                  "helm_package2": "crd_package3: rollback, helm_package2: delete_pvc, helm_package1: upgrade, helm_package2: install"
                }
              ],
              "rollback_pattern": [
                {
                  "helm_package1": "rollback"
                },
                {
                  "helm_package2": "delete"
                },
                {
                  "helm_package2": "delete_pvc"
                },
                {
                  "helm_package1": "upgrade"
                },
                {
                  "helm_package2": "install"
                }
              ]
            },
            "operations": {
              "rollback-operation-from-rel4-b-to-legacy-a": {
                "description": "rollback from rel 4 b to legacy a package",
                "inputs": {
                  "rollback_at_failure_pattern": [
                    {
                      "helm_package1": "helm_package1: delete, helm_package1: install"
                    },
                    {
                      "helm_package2": "crd_package3: rollback, helm_package2: delete_pvc[component=server], helm_package1: upgrade, helm_package2: install"
                    },
                    {
                      "crd_package3": "crd_package3: rollback"
                    }
                  ],
                  "rollback_pattern": [
                    {
                      "helm_package2": "rollback"
                    },
                    {
                      "helm_package2": "delete"
                    },
                    {
                      "helm_package2": "delete_pvc"
                    },
                    {
                      "helm_package1": "upgrade"
                    },
                    {
                      "helm_package2": "install"
                    }
                  ]
                }
              },
              "rollback-operation-from-multi-b-to-multi-a": {
                "description": "rollback from a to b package",
                "inputs": {
                  "rollback_at_failure_pattern": [
                    {
                      "helm_package1": "helm_package1: delete, helm_package1: install"
                    },
                    {
                      "helm_package2": "crd_package3: rollback, helm_package2: delete_pvc[component=server], helm_package1: upgrade, helm_package2: install"
                    },
                    {
                      "crd_package3": "crd_package3: rollback"
                    }
                  ],
                  "rollback_pattern": [
                    {
                      "helm_package2": "rollback"
                    },
                    {
                      "helm_package2": "delete"
                    },
                    {
                      "helm_package2": "delete_pvc"
                    },
                    {
                      "helm_package1": "upgrade"
                    },
                    {
                      "helm_package2": "install"
                    }
                  ]
                }
              }
            }
          },
          "Vnflcm": {
            "scale": {},
            "change_package": {
              "inputs": {
                "helm_packages": [
                  {
                    "get_artifact": [
                      "SELF",
                      "crd_package1"
                    ]
                  },
                  {
                    "get_artifact": [
                      "SELF",
                      "helm_package1"
                    ]
                  },
                  {
                    "get_artifact": [
                      "SELF",
                      "crd_package2"
                    ]
                  },
                  {
                    "get_artifact": [
                      "SELF",
                      "helm_package2"
                    ]
                  },
                  {
                    "get_artifact": [
                      "SELF",
                      "crd_package3"
                    ]
                  }
                ]
              }
            },
            "terminate": {},
            "instantiate": {
              "inputs": {
                "helm_packages": [
                  {
                    "get_artifact": [
                      "SELF",
                      "crd_package1"
                    ]
                  },
                  {
                    "get_artifact": [
                      "SELF",
                      "helm_package1"
                    ]
                  },
                  {
                    "get_artifact": [
                      "SELF",
                      "crd_package2"
                    ]
                  },
                  {
                    "get_artifact": [
                      "SELF",
                      "helm_package2"
                    ]
                  },
                  {
                    "get_artifact": [
                      "SELF",
                      "crd_package3"
                    ]
                  }
                ]
              }
            }
          }
        }
      },
      "test-cnf-vnfc2": {
        "type": "tosca.nodes.nfv.Vdu.OsContainerDeployableUnit",
        "properties": {
          "name": "test-cnf-vnfc2",
          "description": "example",
          "vdu_profile": {
            "min_number_of_instances": 0,
            "max_number_of_instances": 0
          }
        },
        "requirements": [
          {
            "container": "vnfc2_container"
          }
        ]
      },
      "test-cnf-vnfc3": {
        "type": "tosca.nodes.nfv.Vdu.OsContainerDeployableUnit",
        "properties": {
          "name": "test-cnf-vnfc3",
          "description": "example",
          "vdu_profile": {
            "min_number_of_instances": 0,
            "max_number_of_instances": 0
          }
        },
        "requirements": [
          {
            "container": "vnfc3_container"
          }
        ]
      },
      "vnfc3_container": {
        "type": "tosca.nodes.nfv.Vdu.OsContainer",
        "properties": {
          "name": "vnfc3 Container",
          "requested_cpu_resources": 1000,
          "description": "vnfc3 Container",
          "requested_memory_resources": "1 GiB",
          "memory_resource_limit": "10 GiB",
          "cpu_resource_limit": 2500
        },
        "artifacts": {
          "sw_image": {
            "type": "tosca.artifacts.nfv.SwImage",
            "properties": {
              "size": "99 B",
              "min_disk": "100 B",
              "name": "Docker",
              "checksum": {
                "hash": "C2259250EAE4E9D4CDCA5BC2829D40BB2D48A89870E37D21D9364F41BB0A85081757CAAD988D5C7D6D2DC62AFE30A505DFE7827FAA52BDA2CCF5E34C3CDD8302",
                "algorithm": "sha-512"
              },
              "disk_format": "raw",
              "version": "1.0.0",
              "container_format": "docker"
            },
            "file": "Files/images/docker.tar"
          }
        }
      },
      "test-cnf-vnfc4": {
        "type": "tosca.nodes.nfv.Vdu.OsContainerDeployableUnit",
        "properties": {
          "name": "test-cnf-vnfc4",
          "description": "example",
          "vdu_profile": {
            "min_number_of_instances": 0,
            "max_number_of_instances": 0
          }
        },
        "requirements": [
          {
            "container": "vnfc4_container"
          }
        ]
      },
      "vnfc4_container": {
        "type": "tosca.nodes.nfv.Vdu.OsContainer",
        "properties": {
          "name": "vnfc4 Container",
          "requested_cpu_resources": 1000,
          "description": "vnfc4 Container",
          "requested_memory_resources": "1 GiB",
          "memory_resource_limit": "10 GiB",
          "cpu_resource_limit": 2500
        },
        "artifacts": {
          "sw_image": {
            "type": "tosca.artifacts.nfv.SwImage",
            "properties": {
              "size": "99 B",
              "min_disk": "100 B",
              "name": "Docker",
              "checksum": {
                "hash": "C2259250EAE4E9D4CDCA5BC2829D40BB2D48A89870E37D21D9364F41BB0A85081757CAAD988D5C7D6D2DC62AFE30A505DFE7827FAA52BDA2CCF5E34C3CDD8302",
                "algorithm": "sha-512"
              },
              "disk_format": "raw",
              "version": "1.0.0",
              "container_format": "docker"
            },
            "file": "Files/images/docker.tar"
          }
        }
      },
      "test_cnf_storage": {
        "type": "tosca.nodes.nfv.Vdu.VirtualBlockStorage",
        "properties": {
          "per_vnfc_instance": true,
          "virtual_block_storage_data": {
            "size_of_storage": "2 GiB",
            "rdma_enabled": false
          }
        }
      },
      "test_cnf_container": {
        "type": "tosca.nodes.nfv.Vdu.OsContainer",
        "properties": {
          "name": "Test Cnf Container",
          "requested_cpu_resources": 1000,
          "description": "Test Cnf Container",
          "requested_memory_resources": "100 MiB",
          "memory_resource_limit": "128 MiB",
          "cpu_resource_limit": 2500
        },
        "artifacts": {
          "sw_image": {
            "type": "tosca.artifacts.nfv.SwImage",
            "properties": {
              "size": "99 B",
              "min_disk": "100 B",
              "name": "Docker",
              "checksum": {
                "hash": "C2259250EAE4E9D4CDCA5BC2829D40BB2D48A89870E37D21D9364F41BB0A85081757CAAD988D5C7D6D2DC62AFE30A505DFE7827FAA52BDA2CCF5E34C3CDD8301",
                "algorithm": "sha-512"
              },
              "disk_format": "raw",
              "version": "1.0.0",
              "container_format": "docker"
            },
            "file": "Files/images/docker.tar"
          }
        }
      },
      "test-cnf": {
        "type": "tosca.nodes.nfv.Vdu.OsContainerDeployableUnit",
        "properties": {
          "name": "test-cnf",
          "description": "example",
          "vdu_profile": {
            "min_number_of_instances": 0,
            "max_number_of_instances": 0
          }
        },
        "requirements": [
          {
            "container": "test_cnf_container"
          },
          {
            "virtual_storage": "test_cnf_storage"
          }
        ]
      },
      "bulk_reporter_container": {
        "type": "tosca.nodes.nfv.Vdu.OsContainer",
        "properties": {
          "name": "Bulk Reporter_Container",
          "requested_cpu_resources": 1000,
          "description": "Bulk Reporter Container",
          "requested_memory_resources": "100 MiB",
          "memory_resource_limit": "128 MiB",
          "cpu_resource_limit": 2500
        },
        "artifacts": {
          "sw_image": {
            "type": "tosca.artifacts.nfv.SwImage",
            "properties": {
              "size": "99 B",
              "min_disk": "100 B",
              "name": "Docker",
              "checksum": {
                "hash": "C2259250EAE4E9D4CDCA5BC2829D40BB2D48A89870E37D21D9364F41BB0A85081757CAAD988D5C7D6D2DC62AFE30A505DFE7827FAA52BDA2CCF5E34C3CDD8301",
                "algorithm": "sha-512"
              },
              "disk_format": "raw",
              "version": "1.0.0",
              "container_format": "docker"
            },
            "file": "Files/images/docker.tar"
          }
        }
      },
      "eric-pm-bulk-reporter": {
        "type": "tosca.nodes.nfv.Vdu.OsContainerDeployableUnit",
        "properties": {
          "name": "eric-pm-bulk-reporter",
          "description": "example",
          "vdu_profile": {
            "min_number_of_instances": 0,
            "max_number_of_instances": 0
          }
        },
        "requirements": [
          {
            "virtual_storage": "bulk_reporter_storage"
          }
        ]
      },
      "test-cnf-vnfc1": {
        "type": "tosca.nodes.nfv.Vdu.OsContainerDeployableUnit",
        "properties": {
          "name": "test-cnf-vnfc1",
          "description": "example",
          "vdu_profile": {
            "min_number_of_instances": 1,
            "max_number_of_instances": 10
          }
        },
        "requirements": [
          {
            "container": "vnfc1_container"
          }
        ]
      },
      "helm_package2": {
        "type": "tosca.nodes.nfv.Mciop",
        "requirements": [
          {
            "associatedVdu": "eric-pm-bulk-reporter"
          }
        ],
        "artifacts": {
          "helm_package2": {
            "type": "tosca.artifacts.nfv.HelmChart",
            "description": "Mciop Helm package for spider app artifact",
            "file": "Definitions/OtherTemplates/spider-app-2.219.5.tgz"
          }
        }
      },
      "helm_package1": {
        "type": "tosca.nodes.nfv.Mciop",
        "requirements": [
          {
            "associatedVdu": "test-cnf"
          },
          {
            "associatedVdu": "test-cnf-vnfc1"
          },
          {
            "associatedVdu": "test-cnf-vnfc2"
          },
          {
            "associatedVdu": "test-cnf-vnfc3"
          },
          {
            "associatedVdu": "test-cnf-vnfc4"
          }
        ],
        "artifacts": {
          "helm_package1": {
            "type": "tosca.artifacts.nfv.HelmChart",
            "description": "Mciop Helm package for test scale chart artifact",
            "file": "Definitions/OtherTemplates/test-scale-chart-0.3.5.tgz"
          }
        }
      },
      "vnfc2_container": {
        "type": "tosca.nodes.nfv.Vdu.OsContainer",
        "properties": {
          "name": "vnfc2 Container",
          "requested_cpu_resources": 1000,
          "description": "vnfc2 Container",
          "requested_memory_resources": "1 GiB",
          "memory_resource_limit": "10 GiB",
          "cpu_resource_limit": 2500
        },
        "artifacts": {
          "sw_image": {
            "type": "tosca.artifacts.nfv.SwImage",
            "properties": {
              "size": "99 B",
              "min_disk": "100 B",
              "name": "Docker",
              "checksum": {
                "hash": "C2259250EAE4E9D4CDCA5BC2829D40BB2D48A89870E37D21D9364F41BB0A85081757CAAD988D5C7D6D2DC62AFE30A505DFE7827FAA52BDA2CCF5E34C3CDD8302",
                "algorithm": "sha-512"
              },
              "disk_format": "raw",
              "version": "1.0.0",
              "container_format": "docker"
            },
            "file": "Files/images/docker.tar"
          }
        }
      },
      "bulk_reporter_storage": {
        "type": "tosca.nodes.nfv.Vdu.VirtualBlockStorage",
        "properties": {
          "per_vnfc_instance": true,
          "virtual_block_storage_data": {
            "size_of_storage": "1 GiB",
            "rdma_enabled": false
          }
        }
      }
    }
  },
  "imports": [
    "etsi_nfv_sol001_vnfd_4_2_1_types.yaml"
  ],
  "tosca_definitions_version": "tosca_simple_yaml_1_3",
  "description": "VNF Descriptor for Ericsson SGSN-MME",
  "interface_types": {
    "ericsson.interfaces.nfv.EricssonChangeCurrentVnfPackage": {
      "derived_from": "tosca.interfaces.nfv.ChangeCurrentVnfPackage",
      "inputs": {
        "rollback_at_failure_pattern": {
          "type": "list",
          "description": "tags",
          "entry_schema": {
            "type": "map"
          }
        },
        "rollback_pattern": {
          "type": "list",
          "entry_schema": {
            "type": "map"
          },
          "description": "pattern to apply when for downgrade"
        }
      },
      "operations": {
        "rollback-operation-from-rel4-b-to-legacy-a": {
          "description": "operation for change from rel4 b to legacy a",
          "inputs": {
            "additional_parameters": {
              "type": "ericsson.datatypes.nfv.VnfChangeToLegacyAAdditionalParameters",
              "required": false
            }
          }
        },
        "rollback-operation-from-multi-b-to-multi-a": {
          "description": "operation for change from b to a",
          "inputs": {
            "additional_parameters": {
              "type": "ericsson.datatypes.nfv.VnfChangeToVersion1AdditionalParameters",
              "required": false
            }
          }
        }
      }
    }
  },
  "data_types": {
    "file": {
      "derived_from": "string"
    },
    "ericsson.datatypes.nfv.VnfInfoModifiableAttributesExtensions": {
      "derived_from": "tosca.datatypes.nfv.VnfInfoModifiableAttributesExtensions",
      "properties": {
        "vnfControlledScaling": {
          "description": "Represents for each aspect the controlled scaling method, either Manual or CISM",
          "default": {
            "Aspect4": "ManualControlled",
            "Aspect1": "ManualControlled",
            "Aspect2": "ManualControlled"
          },
          "type": "map",
          "entry_schema": {
            "type": "string",
            "constraints": [
              {
                "valid_values": [
                  "ManualControlled",
                  "CISMControlled"
                ]
              }
            ]
          },
          "required": false
        }
      }
    },
    "ericsson.datatypes.nfv.ChangePackageVnfOperationAdditionalParameters": {
      "derived_from": "tosca.datatypes.nfv.VnfOperationAdditionalParameters",
      "properties": {
        "vnfc2.ingress.host": {
          "type": "string",
          "description": "ingress host for vnf2",
          "required": true
        },
        "bro_endpoint_url": {
          "type": "string",
          "description": "This property contains the bro endpoint URI for backup & restore",
          "required": false
        },
        "persistScaleInfo": {
          "description": "persists the scale information from previous state",
          "default": true,
          "type": "boolean",
          "required": true
        },
        "vnfc1.ingress.host": {
          "type": "string",
          "description": "ingress host for vnf1",
          "required": true
        },
        "tags.pm": {
          "description": "pm tag",
          "default": true,
          "type": "boolean",
          "required": true
        },
        "config.nbi.file.json.configMap": {
          "description": "File parameter to add data for json to configmap",
          "metadata": {
            "chart_param": "config.nbi.file.json.configMap"
          },
          "type": "file",
          "required": false
        },
        "pm-testapp.ingress.domain": {
          "description": "pm ingress",
          "default": "rontgen010.seli.gic.ericsson.se",
          "type": "string",
          "required": true
        },
        "vnfc4.ingress.host": {
          "type": "string",
          "description": "ingress host for vnf4",
          "required": true
        },
        "vnfc3.ingress.host": {
          "type": "string",
          "description": "ingress host for vnf3",
          "required": true
        },
        "eric-adp-gs-testapp.tls.dced.enabled": {
          "description": "enable tls for eric-adp-gs-testapp",
          "default": false,
          "type": "boolean",
          "required": true
        },
        "bro.ingress.enabled": {
          "description": "Enables the ingress to be created for BRO",
          "default": false,
          "type": "boolean",
          "required": false
        },
        "config.nbi.file.script.configMap": {
          "description": "File parameter to add data for script to configmap",
          "metadata": {
            "chart_param": "config.nbi.file.script.configMap"
          },
          "type": "file",
          "required": false
        },
        "influxdb.ext.apiAccessHostname": {
          "description": "tags",
          "default": "influxdb-service2.rontgen010.seli.gic.ericsson.se",
          "type": "string",
          "required": true
        },
        "upgrade.downsize.allowed": {
          "description": "Indicates that the CNF/CNA is upgraded by setting all replicas to zero before upgrading to resources.",
          "default": true,
          "type": "boolean",
          "required": false
        },
        "config.nbi.file.enabled": {
          "description": "Enabled creation of file configmap",
          "default": false,
          "metadata": {
            "chart_param": "config.nbi.file.enabled"
          },
          "type": "boolean",
          "required": false
        },
        "values.yaml": {
          "type": "string",
          "description": "This property can contain the contents of a values.yaml file in escaped json format",
          "required": false
        },
        "eric-adp-gs-testapp.ingress.enabled": {
          "description": "tags",
          "default": false,
          "type": "boolean",
          "required": true
        },
        "config.nbi.file.xml.configMap": {
          "description": "File parameter to add data for xml to configmap",
          "metadata": {
            "chart_param": "config.nbi.file.xml.configMap"
          },
          "type": "file",
          "required": false
        },
        "backup-controller.enabled": {
          "description": "Deploy's BRO if set to true",
          "default": false,
          "type": "boolean",
          "required": false
        },
        "eric-adp-gs-testapp.service.replicaCount": {
          "description": "integer value for schema.json validation",
          "default": 1,
          "type": "integer",
          "required": false
        },
        "isAutoRollbackAllowed": {
          "type": "boolean",
          "description": "This field set to false will disable auto-rollback after failed upgrade",
          "required": false
        },
        "global.hosts.bro": {
          "description": "Ingress host address for BRO",
          "default": "bro.test.hahn061.rnd.gic.ericsson.se",
          "type": "string",
          "required": false
        },
        "tags.all": {
          "description": "tags",
          "default": false,
          "type": "boolean",
          "required": true
        },
        "eric-pm-server.server.ingress.enabled": {
          "description": "tags",
          "default": false,
          "type": "boolean",
          "required": true
        },
        "vnfc1.test-cnf.ingress.host": {
          "type": "string",
          "description": "ingress host for vnf1",
          "required": true
        },
        "eric-pm-server.server.persistentVolume.storageClass": {
          "description": "db",
          "default": "network-block",
          "type": "string",
          "required": false
        }
      }
    },
    "ericsson.datatypes.nfv.VnfChangeToLegacyAAdditionalParameters": {
      "derived_from": "tosca.datatypes.nfv.VnfOperationAdditionalParameters",
      "properties": {
        "data_conversion_identifier": {
          "type": "string",
          "required": false,
          "default": "rollback-operation-from-rel4-b-to-legacy-a"
        }
      }
    },
    "ericsson.datatypes.nfv.InstantiateVnfOperationAdditionalParameters": {
      "derived_from": "tosca.datatypes.nfv.VnfOperationAdditionalParameters",
      "properties": {
        "vnfc2.ingress.host": {
          "type": "string",
          "description": "ingress host for vnf2",
          "required": true
        },
        "bro_endpoint_url": {
          "type": "string",
          "description": "This property contains the bro endpoint URI for backup & restore",
          "required": false
        },
        "config.nbi.file.script.configMap": {
          "description": "File parameter to add data for script to configmap",
          "metadata": {
            "chart_param": "config.nbi.file.script.configMap"
          },
          "type": "file",
          "required": false
        },
        "influxdb.ext.apiAccessHostname": {
          "description": "tags",
          "default": "influxdb-service2.rontgen010.seli.gic.ericsson.se",
          "type": "string",
          "required": true
        },
        "vnfc1.ingress.host": {
          "type": "string",
          "description": "ingress host for vnf1",
          "required": true
        },
        "config.nbi.file.enabled": {
          "description": "Enabled creation of file configmap",
          "default": false,
          "metadata": {
            "chart_param": "config.nbi.file.enabled"
          },
          "type": "boolean",
          "required": false
        },
        "values.yaml": {
          "type": "string",
          "description": "This property can contain the contents of a values.yaml file in escaped json format",
          "required": false
        },
        "tags.pm": {
          "description": "pm tag",
          "default": true,
          "type": "boolean",
          "required": true
        },
        "eric-adp-gs-testapp.ingress.enabled": {
          "description": "tags",
          "default": false,
          "type": "boolean",
          "required": true
        },
        "config.nbi.file.xml.configMap": {
          "description": "File parameter to add data for xml to configmap",
          "metadata": {
            "chart_param": "config.nbi.file.xml.configMap"
          },
          "type": "file",
          "required": false
        },
        "config.nbi.file.json.configMap": {
          "description": "File parameter to add data for json to configmap",
          "metadata": {
            "chart_param": "config.nbi.file.json.configMap"
          },
          "type": "file",
          "required": false
        },
        "backup-controller.enabled": {
          "description": "Deploy's BRO if set to true",
          "default": false,
          "type": "boolean",
          "required": false
        },
        "eric-adp-gs-testapp.service.replicaCount": {
          "description": "integer value for schema.json validation",
          "default": 1,
          "type": "integer",
          "required": false
        },
        "pm-testapp.ingress.domain": {
          "description": "pm ingress",
          "default": "rontgen010.seli.gic.ericsson.se",
          "type": "string",
          "required": true
        },
        "global.hosts.bro": {
          "description": "Ingress host address for BRO",
          "default": "bro.test.hahn061.rnd.gic.ericsson.se",
          "type": "string",
          "required": false
        },
        "vnfc4.ingress.host": {
          "type": "string",
          "description": "ingress host for vnf4",
          "required": true
        },
        "vnfc3.ingress.host": {
          "type": "string",
          "description": "ingress host for vnf3",
          "required": true
        },
        "tags.all": {
          "description": "tags",
          "default": false,
          "type": "boolean",
          "required": true
        },
        "eric-pm-server.server.ingress.enabled": {
          "description": "tags",
          "default": false,
          "type": "boolean",
          "required": true
        },
        "eric-adp-gs-testapp.tls.dced.enabled": {
          "description": "enable tls for eric-adp-gs-testapp",
          "default": false,
          "type": "boolean",
          "required": true
        },
        "bro.ingress.enabled": {
          "description": "Enables the ingress to be created for BRO",
          "default": false,
          "type": "boolean",
          "required": false
        },
        "vnfc1.test-cnf.ingress.host": {
          "type": "string",
          "description": "ingress host for vnf1",
          "required": true
        },
        "eric-pm-server.server.persistentVolume.storageClass": {
          "description": "db",
          "default": "network-block",
          "type": "string",
          "required": false
        }
      }
    },
    "ericsson.datatypes.nfv.VnfChangeToVersion1AdditionalParameters": {
      "derived_from": "tosca.datatypes.nfv.VnfOperationAdditionalParameters",
      "properties": {
        "data_conversion_identifier": {
          "type": "string",
          "required": false,
          "default": "rollback-operation-from-multi-b-to-multi-a"
        }
      }
    },
    "ericsson.datatypes.nfv.VnfInfoModifiableAttributes": {
      "derived_from": "tosca.datatypes.nfv.VnfInfoModifiableAttributes",
      "properties": {
        "extensions": {
          "type": "ericsson.datatypes.nfv.VnfInfoModifiableAttributesExtensions"
        }
      }
    }
  }
}